name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'

jobs:
  # Job untuk pengecekan kualitas kode (ESLint)
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: yarn install --frozen-lockfile
      - name: Run ESLint
        run: yarn lint

  # Job untuk menjalankan unit test
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: yarn install --frozen-lockfile
      - name: Run tests with coverage
        run: yarn test --coverage
      - name: Show coverage file
        run: ls -R coverage

      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          args: >
            -Dsonar.projectKey=Anaaaslagi_pso-backups
            -Dsonar.organization=anaaaslagi
            -Dsonar.sources=src
            -Dsonar.exclusions=**/node_modules/**,**/.next/**,**/public/**
            -Dsonar.test.inclusions=**/__tests__/**,**/*.test.js
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

  # Job untuk membangun aplikasi
  build:
    runs-on: ubuntu-latest
    needs: [test, code-quality]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: yarn install --frozen-lockfile
      - run: |
          # Setel DSN untuk Sentry di build
          export SENTRY_DSN="${{ secrets.SENTRY_DSN }}"
          yarn build --sentry-dsn=$SENTRY_DSN

  # Job untuk Dockerize aplikasi dan deploy ke Cloud Run
  dockerize:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Build and Push Docker image with Commit SHA Tag
        run: |
          IMAGE_TAG="${{ github.sha }}" 
          FULL_IMAGE_NAME="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/docker-repo/notea:$IMAGE_TAG"
          
          echo "Building image: $FULL_IMAGE_NAME"
          docker build -t $FULL_IMAGE_NAME . 
          
          echo "Pushing image: $FULL_IMAGE_NAME"
          docker push $FULL_IMAGE_NAME
